using Client.Wpf.Presenters.Interfaces;
using Client.Wpf.Windows.Interfaces;
using Core.Helpers.Logger.Interfaces;
using System;
using System.Threading;
using System.Windows;
using System.Windows.Threading;

namespace Client.Wpf.Windows
{
    public class BaseWindow : Window, IBaseWindow
    {
        #region Properties

        /// <summary> An instance of an active logger. </summary>
        public IActiveLogger Log { get; }

        public IPresenter Presenter { get; private set; }

        #endregion Properties
        #region Constructors

        public BaseWindow()
        {
        }

        /// <summary> Creates a new window. </summary>
        /// <param name="logCategory"> The category of logs generated by this instance. </param>
        /// <param name="parentWindow"> The window that owns this one. </param>
        /// <param name="presenter"> The presenter to attach. </param>
        public BaseWindow(string logCategory, IBaseWindow parentWindow, IPresenter presenter)
        {
            Log = ApplicationHelpers.CreateActiveLogger(logCategory);
            Owner = parentWindow as Window;

            Presenter = presenter;
            Presenter.SetParentWindow(this);
        }

        #endregion Constructors

        /// <summary> Applies localisation to visible text in the window. </summary>
        public virtual void Localise()
        {
        }

        public void Invoke(DispatcherPriority priority, Action method)
        {
            Dispatcher.Invoke(priority, method);
        }

        public object Invoke(DispatcherPriority priority, Func<object> method)
        {
            return Dispatcher.Invoke(priority, method);
        }

        public void CloseSafely()
        {
            if (Dispatcher.CheckAccess())
                Close();

            else
                Dispatcher.Invoke(DispatcherPriority.Normal, new ThreadStart(Close));
        }

        /// <summary> Removes references to instances on adjacent levels. </summary>
        public void Dispose()
        {
            Presenter = null;
        }
    }
}