using Core.DataBase.Enumerations;
using Core.DataBase.Helpers.Interfaces;
using Core.DataBase.WarThunder.Attributes;
using Core.DataBase.WarThunder.Enumerations;
using Core.DataBase.WarThunder.Enumerations.DataBase;
using Core.DataBase.WarThunder.Helpers;
using Core.DataBase.WarThunder.Objects.Interfaces;
using Core.DataBase.WarThunder.Objects.Json;
using Core.DataBase.WarThunder.Objects.Json.Interfaces;
using Core.DataBase.WarThunder.Objects.VehicleGameModeParameterSets;
using NHibernate.Mapping;
using NHibernate.Mapping.Attributes;
using System.Collections.Generic;
using System.Reflection;

namespace Core.DataBase.WarThunder.Objects
{
    /// <summary> A vehicle (air, ground, or sea). </summary>
    [Class(Table = ETable.Vehicle)]
    public class Vehicle : PersistentObjectWithIdAndGaijinId, IVehicle
    {
        #region Constants

        /// <summary> The formatting string for output of <see cref="BattleRating"/>. </summary>
        private const string _battleRatingFormat = "#.0";
        /// <summary> The string representing an unknown battle rating. </summary>
        private const string _unknownBattleRating = "?.?";

        /// <summary> The regular experession matching <see cref="_battleRatingFormat"/> to check validity of <see cref="BattleRating"/> values. </summary>
        public const string BattleRatingRegExPattern = "[1-9]{1}[0-9]{0,}.[037]{1}";

        #endregion Constants
        #region Persistent Properties

        #region Crew

        /// <summary> The crew train cost in Silver Lions that has to be paid before a vehicle can be put into a crew slot (except for reserve vehicles). </summary>
        [Property()] public virtual int BaseCrewTrainCostInSilver { get; protected set; }

        /// <summary> The expert crew train cost in Silver Lions. </summary>
        [Property()] public virtual int ExpertCrewTrainCostInSilver { get; protected set; }

        /// <summary> The base cost of ace crew training in Golden Eagles. </summary>
        [Property()] public virtual int AceCrewTrainCostInGold { get; protected set; }

        /// <summary> The amount of research generated by the vehicle to unlock ace crew qualification for free. </summary>
        [Property()] public virtual int AceCrewTrainCostInResearch { get; protected set; }

        /// <summary> The total number of crewmen in the vehicle. </summary>
        [Property()] public virtual int CrewCount { get; protected set; }

        /// <summary>
        /// The minimum number of crewmen in the vehicle for it to be operable.
        /// This property is only assigned to naval vessels. Aircraft by default need at least one pilot to stay in the air, while ground vehicles require two.
        /// </summary>
        [Property()] public virtual int? MinumumCrewCountToOperate { get; protected set; }

        /// <summary> The number of gunners in the vehicle. </summary>
        [Property()] public virtual int GunnersCount { get; protected set; }

        #endregion Crew
        #region General

        /// <summary> The vehicle's ID. </summary>
        [Id(Column = EColumn.Id, TypeType = typeof(long), Name = nameof(Id), Generator = EIdGenerator.HiLo)]
        public override long Id { get; protected set; }

        /// <summary> The vehicle's Gaijin ID. </summary>
        [Property(NotNull = true, Unique = true)]
        public override string GaijinId { get; protected set; }

        /// <summary> The vehicle's nation. </summary>
        [Property()] public virtual string Nation { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual string MoveType { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual string Class { get; protected set; }

        /// <summary> Whether this vehicle is hidden. </summary>
        [Property()] public virtual bool? ShowOnlyWhenBought { get; protected set; }

        /// <summary> The category of hidden vehicles this one belongs to. </summary>
        [Property()] public virtual string CategoryOfHiddenVehicles { get; protected set; }

        /// <summary> The gift requirement that grants ownerhip of this vehicle. </summary>
        [Property()] public virtual string OwnershipGiftPrerequisite { get; protected set; }

        /// <summary> Whether this vehicle is gifted to new players upon selecting their first vehicle branch and completing the tutorial. </summary>
        [Property()] public virtual bool? GiftedToNewPlayersForSelectingTheirFirstBranch { get; protected set; }

        /// <summary> The purchase requirement that grants ownerhip of this vehicle. </summary>
        [Property()] public virtual string OwnershipPurchasePrerequisite { get; protected set; }

        /// <summary>
        /// The custom research category that this vehicle is unlocked with.
        /// NULL means that standard research is used.
        /// <para>
        /// This property had been introduced with special squadron vehicles that are researched with squadron activity instead of the normal research,
        /// or are purchased with Golden Eagles, with discount (see <see cref="DiscountedPurchaseCostInGold"/>) if some research progress is made.
        /// </para>
        /// </summary>
        [Property()] public virtual string ResearchUnlockType { get; protected set; }

        /// <summary> The amount of research required to unlock the vehicle. </summary>
        [Property()] public virtual int? UnlockCostInResearch { get; protected set; }

        /// <summary>
        /// The price of purchasing the vehicle with Silver Lions.
        /// Zero means that the vehicle cannot be bought for Silver Lions.
        /// </summary>
        [Property()] public virtual int PurchaseCostInSilver { get; protected set; }

        /// <summary> The price of purchasing the vehicle with Golden Eagles. </summary>
        [Property()] public virtual int? PurchaseCostInGold { get; protected set; }

        /// <summary> The price of purchasing a squadron-researchable vehicle (see <see cref="ResearchUnlockType"/>) after some progress towards its unlocking is made. </summary>
        [Property()] public virtual int? DiscountedPurchaseCostInGold { get; protected set; }

        /// <summary> The vehicle that has to be researched / unlocked before this one can be purchased. </summary>
        [Property()] public virtual string VehicleRequired { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual string SpawnType { get; protected set; }

        /// <summary>
        /// The number of times this vehicle can sortie per match.
        /// This property is necessary for branches that don't have more than one reserve / starter vehicle, like helicopters and navy.
        /// </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Integer.NumberOfSpawns), PropertyRef = nameof(VehicleGameModeParameterSet.Integer.NumberOfSpawns.Vehicle))]
        public virtual VehicleGameModeParameterSet.Integer.NumberOfSpawns NumberOfSpawns { get; protected set; }

        /// <summary> Whether this vehicle can spawn as a kill streak aircraft in Arcade Battles. </summary>
        [Property()] public virtual bool? CanSpawnAsKillStreak { get; protected set; }

        #endregion General
        #region Graphics

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual string CustomClassIco { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual string CustomImage { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual string CustomTooltipImage { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual string CommonWeaponImage { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual int? WeaponMask { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual int? BulletsIconParam { get; protected set; }

        #endregion Graphics
        #region Modifications

        /// <summary>
        /// [NOT VISUALLY USED IN GAME CLIENT]
        /// The amount of researched modifications of the zeroth tier required to unlock modifications of the first tier.
        /// </summary>
        [Property()] public virtual int AmountOfModificationsResearchedIn_Tier0_RequiredToUnlock_Tier1 { get; protected set; }

        /// <summary> The amount of researched modifications of the first tier required to unlock modifications of the second tier. </summary>
        [Property()] public virtual int AmountOfModificationsResearchedIn_Tier1_RequiredToUnlock_Tier2 { get; protected set; }

        /// <summary> The amount of researched modifications of the second tier required to unlock modifications of the third tier. </summary>
        [Property()] public virtual int AmountOfModificationsResearchedIn_Tier2_RequiredToUnlock_Tier3 { get; protected set; }

        /// <summary> The amount of researched modifications of the third tier required to unlock modifications of the fourth tier. </summary>
        [Property()] public virtual int AmountOfModificationsResearchedIn_Tier3_RequiredToUnlock_Tier4 { get; protected set; }

        /// <summary> The price of purchasing backup sorties for the vehicle (consumable once a match on a vehicle by vehicle basis) with Golden Eagles (a piece). </summary>
        [Property()] public virtual int BackupSortieCostInGold { get; protected set; }

        #endregion Modifications
        #region Performance

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual decimal? Speed { get; protected set; }

        /// <summary> Maximum flight time (in munutes). Applies only to planes and indicates for how long one can fly with a full tank of fuel. </summary>
        [Property()] public virtual int? MaximumFlightTime { get; protected set; }

        /// <summary> The baseline time of fire extinguishing for inexperienced naval crewmen. </summary>
        [Property()] public virtual decimal? MaximumFireExtinguishingTime { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual decimal? HullBreachRepairSpeed { get; protected set; }

        #endregion Performance
        #region Rank

        /// <summary> The vehicle's research rank. </summary>
        [Property()] public virtual int Rank { get; protected set; }

        /// <summary> [OBSOLETE, NOW AN INTERNAL VALUES] The vehicle's ranks (the predecessor of the <see cref="BattleRating"/>). The battle rating is being calculated from these. </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Integer.EconomicRank), PropertyRef = nameof(VehicleGameModeParameterSet.Integer.EconomicRank.Vehicle))]
        public virtual VehicleGameModeParameterSet.Integer.EconomicRank EconomicRank { get; protected set; }

        /// <summary> Values used for matchmaking (falling into a ± 1.0 battle rating bracket). </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Decimal.BattleRating), PropertyRef = nameof(VehicleGameModeParameterSet.Decimal.BattleRating.Vehicle))]
        public virtual VehicleGameModeParameterSet.Decimal.BattleRating BattleRating { get; protected set; }

        /// <summary> Values used for matchmaking (falling into a ± 1.0 battle rating bracket). </summary>
        public virtual VehicleGameModeParameterSet.String.BattleRating BattleRatingFormatted { get; protected set; }

        #endregion Rank
        #region Repairs

        /// <summary>
        /// The full time needed for the vehicle to be repaired for free while being in the currently selected preset.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Decimal.RepairTimeWithCrew), PropertyRef = nameof(VehicleGameModeParameterSet.Decimal.RepairTimeWithCrew.Vehicle))]
        public virtual VehicleGameModeParameterSet.Decimal.RepairTimeWithCrew RepairTimeWithCrew { get; protected set; }

        /// <summary>
        /// The full time needed for the vehicle to be repaired for free while not being in the currently selected preset.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Decimal.RepairTimeWithoutCrew), PropertyRef = nameof(VehicleGameModeParameterSet.Decimal.RepairTimeWithoutCrew.Vehicle))]
        public virtual VehicleGameModeParameterSet.Decimal.RepairTimeWithoutCrew RepairTimeWithoutCrew { get; protected set; }

        /// <summary>
        /// The full Silver Lion cost for repairing or auto-repairing the vehicle.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Integer.RepairCost), PropertyRef = nameof(VehicleGameModeParameterSet.Integer.RepairCost.Vehicle))]
        public virtual VehicleGameModeParameterSet.Integer.RepairCost RepairCost { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY, ALL PREMIUM (NON-GIFT) VEHICLES HAVE IT] </summary>
        [Property()] public virtual int? FreeRepairs { get; protected set; }

        #endregion Repairs
        #region Rewards

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Integer.BattleTimeAward), PropertyRef = nameof(VehicleGameModeParameterSet.Integer.BattleTimeAward.Vehicle))]
        public virtual VehicleGameModeParameterSet.Integer.BattleTimeAward BattleTimeAward { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Integer.AverageAward), PropertyRef = nameof(VehicleGameModeParameterSet.Integer.AverageAward.Vehicle))]
        public virtual VehicleGameModeParameterSet.Integer.AverageAward AverageAward { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Decimal.RewardMultiplier), PropertyRef = nameof(VehicleGameModeParameterSet.Decimal.RewardMultiplier.Vehicle))]
        public virtual VehicleGameModeParameterSet.Decimal.RewardMultiplier RewardMultiplier { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Decimal.VisualRewardMultiplier), PropertyRef = nameof(VehicleGameModeParameterSet.Decimal.VisualRewardMultiplier.Vehicle))]
        public virtual VehicleGameModeParameterSet.Decimal.VisualRewardMultiplier VisualRewardMultiplier { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Decimal.VisualPremiumRewardMultiplier), PropertyRef = nameof(VehicleGameModeParameterSet.Decimal.VisualPremiumRewardMultiplier.Vehicle))]
        public virtual VehicleGameModeParameterSet.Decimal.VisualPremiumRewardMultiplier VisualPremiumRewardMultiplier { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual decimal ResearchRewardMultiplier { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual decimal GroundKillRewardMultiplier { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [OneToOne(ClassType = typeof(VehicleGameModeParameterSet.Decimal.BattleTime), PropertyRef = nameof(VehicleGameModeParameterSet.Decimal.BattleTime.Vehicle))]
        public virtual VehicleGameModeParameterSet.Decimal.BattleTime BattleTime { get; protected set; }

        #endregion Rewards
        #region Weapons

        /// <summary> The vehicle's turret traverse speeds. </summary>
        [Property()] public virtual List<decimal> TurretTraverseSpeeds { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual decimal? MachineGunReloadTime { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual List<decimal> CannonReloadTime { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual decimal? GunnerReloadTime { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY, VEHICLES WITHOUT PRIMARY ARMAMENT DON"T HAVE THIS PROPERTY] </summary>
        [Property()] public virtual int? MaximumAmmunition { get; protected set; }

        /// <summary> Whether the vehicle's main armament comes equipped with an auto-loader (grants fixed reload speed that doesn't depend on the loader and doesn't improve with the loader's skill). </summary>
        [Property()] public virtual bool? PrimaryWeaponHasAutoLoader { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual decimal? MaximumRocketDeltaAngle { get; protected set; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        [Property()] public virtual decimal? MaximumAtgmDeltaAngle { get; protected set; }

        /// <summary> The modification that is considered an upgrade of the vehicle's armaments. </summary>
        [Property()] public virtual string WeaponUpgrade1 { get; protected set; }

        /// <summary> The modification that is considered an upgrade of the vehicle's armaments. </summary>
        [Property()] public virtual string WeaponUpgrade2 { get; protected set; }

        /// <summary> The modification that is considered an upgrade of the vehicle's armaments. </summary>
        [Property()] public virtual string WeaponUpgrade3 { get; protected set; }

        /// <summary> The modification that is considered an upgrade of the vehicle's armaments. </summary>
        [Property()] public virtual string WeaponUpgrade4 { get; protected set; }

        // Properties in this group below are here to match JSON object composition, even though these should not be here.

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_76mm_F34_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_76mm_F34_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_12_7mm_DShK_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_12_7mm_DShK_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_12_7mm_DShK_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_12_7mm_DShK_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_37mm_70_K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_37mm_70_K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_45mm_21K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_45mm_21K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_37mm_70_K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_37mm_70_K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_12_7mm_M2_HB_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_12_7mm_M2_HB_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_30mm_MK103_38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_30mm_MK103_38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_20mm_FlaK38_vierling_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_20mm_FlaK38_vierling_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_20mm_zwilling_MG_C38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_20mm_zwilling_MG_C38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_7_92mm_MG15_navy_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_7_92mm_MG15_navy_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_15mm_MG151_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_15mm_MG151_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_20mm_MG151_20_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_20mm_MG151_20_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_40mm_QF_2pdr_mk_XV_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_40mm_QF_2pdr_mk_XV_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_40mm_2pdr_Rolls_Royce_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_40mm_2pdr_Rolls_Royce_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_12_7mm_05_Vickers_mk_V_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_12_7mm_05_Vickers_mk_V_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_7_7mm_Vikkers_GO_No5_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_7_7mm_Vikkers_GO_No5_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_12_7mm_M2_HB_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_12_7mm_M2_HB_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_20mm_Oerlikon_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_20mm_Oerlikon_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_37mm_AN_M4_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_37mm_AN_M4_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_40mm_l60_bofors_mk3_single_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_40mm_l60_bofors_mk3_single_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_85mm_ZiS_S_53_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_85mm_ZiS_S_53_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_88mm_SKC_35_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_88mm_SKC_35_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_37mm_SKC_30_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_37mm_SKC_30_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_15mm_MG_M38_t_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_15mm_MG_M38_t_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_57mm_6pdr_7CWT_QF_Mk_11A_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_57mm_6pdr_7CWT_QF_Mk_11A_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_20mm_Oerlikon_mk_v_twin_mount_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_20mm_Oerlikon_mk_v_twin_mount_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_12_7mm_05_Vickers_mk_V_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_12_7mm_05_Vickers_mk_V_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_12_7mm_DShK_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_12_7mm_DShK_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_37mm_FlaKM42_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_37mm_FlaKM42_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_20mm_zwilling_MG_C38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_20mm_zwilling_MG_C38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_20mm_FlaK38_vierling_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_20mm_FlaK38_vierling_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_25mm_2M_3_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_25mm_2M_3_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_40mm_L70_Bofors_MEL_58_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_40mm_L70_Bofors_MEL_58_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_114mm_8cwt_QF_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_114mm_8cwt_QF_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_40mm_l60_bofors_mk3_single_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_40mm_l60_bofors_mk3_single_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_120mm_Mark_XII_CP_XIX_mount_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_120mm_Mark_XII_CP_XIX_mount_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_102mm_Mark_XVI_Mark_XIX_mount_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_102mm_Mark_XVI_Mark_XIX_mount_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_40mm_QF_2pdr_mk_XV_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_40mm_QF_2pdr_mk_XV_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_20mm_Oerlikon_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_20mm_Oerlikon_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_14_5mm_KPVT_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_14_5mm_KPVT_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_130mm_B_13_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_130mm_B_13_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_76mm_34K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_76mm_34K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_37mm_70_K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_37mm_70_K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_20mm_Oerlikon_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_20mm_Oerlikon_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_127mm_5_38_Mark_12_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_127mm_5_38_Mark_12_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_40mm_l60_bofors_mk1_twin_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_40mm_l60_bofors_mk1_twin_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_127mm_skc34_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_127mm_skc34_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_37mm_SKC_30_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_37mm_SKC_30_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_20mm_FlaK38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_20mm_FlaK38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_20mm_MG_C38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_20mm_MG_C38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_20mm_zwilling_MG_C38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_20mm_zwilling_MG_C38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_7_92mm_MG34_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_7_92mm_MG34_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_105mm_SK_C32_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_105mm_SK_C32_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_20mm_MGC30_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_20mm_MGC30_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_76mm_Melara_76_62_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_76mm_Melara_76_62_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_7_92mm_MG34_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_7_92mm_MG34_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_20mm_FlaK38_vierling_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_20mm_FlaK38_vierling_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_88mm_Flak36_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_88mm_Flak36_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_20mm_FlaK38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_20mm_FlaK38_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_81mm_mk_2_mortar_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_81mm_mk_2_mortar_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_12_7mm_M2_HB_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_12_7mm_M2_HB_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_76mm_50cal_mk34_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_76mm_50cal_mk34_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_76mm_3_50_mk10_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_76mm_3_50_mk10_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_40mm_l60_bofors_mk1_twin_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_40mm_l60_bofors_mk1_twin_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_76mm_3_50_mk10_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_76mm_3_50_mk10_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_152mm_6inch_45_bl_mk_xii_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_152mm_6inch_45_bl_mk_xii_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_102mm_Mark_V_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_102mm_Mark_V_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_150mm_l_48_c_36_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_150mm_l_48_c_36_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_105mm_SK_C32_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_105mm_SK_C32_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_40mm_4cm_flak_bofors_28_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_40mm_4cm_flak_bofors_28_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_152mm_6inch_53_mk_12_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_152mm_6inch_53_mk_12_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_28mm_75_mk_1_chicago_piano_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_28mm_75_mk_1_chicago_piano_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_180mm_b1k_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_180mm_b1k_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_100mm_50_manizini_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_100mm_50_manizini_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_30mm_ak_230_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_30mm_ak_230_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_102mm_50_4inch_mk9_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_102mm_50_4inch_mk9_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_76mm_3_23_mk4_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_76mm_3_23_mk4_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_120mm_l_45_mark_8_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_120mm_l_45_mark_8_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_20mm_shvak_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_20mm_shvak_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_76mm_34K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_76mm_34K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_76mm_ak_726_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_76mm_ak_726_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_45mm_21K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_45mm_21K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_14_5mm_KPVT_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_14_5mm_KPVT_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_57mm_ak_725_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_57mm_ak_725_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_25mm_2M_3_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_25mm_2M_3_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_85mm_90_K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_85mm_90_K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_76mm_D56_TS_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_76mm_D56_TS_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_30mm_bp_30_mortar_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_30mm_bp_30_mortar_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_102mm_60_1911_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_102mm_60_1911_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_76mm_1914_lender_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_76mm_1914_lender_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_7_7mm_lewis_amg_1916_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_7_7mm_lewis_amg_1916_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_7_7mm_mg_lewis_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_7_7mm_mg_lewis_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_76mm_QQF_3in_20cwt_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_76mm_QQF_3in_20cwt_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_102mm_Mark_V_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_102mm_Mark_V_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_7_7mm_mg_lewis_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_7_7mm_mg_lewis_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_47mm_qf3pdr_hotchkiss_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_47mm_qf3pdr_hotchkiss_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_7_7mm_lewis_amg_1916_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_7_7mm_lewis_amg_1916_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_7_7mm_lewis_amg_1916_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_7_7mm_lewis_amg_1916_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_40mm_2pdr_Rolls_Royce_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_40mm_2pdr_Rolls_Royce_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_12_7mm_05_Vickers_mk_V_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_12_7mm_05_Vickers_mk_V_naval_user_machinegun { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_114mm_45_QF_MkIV_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_114mm_45_QF_MkIV_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_102mm_33_4inch_qf_mkXXIII_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_102mm_33_4inch_qf_mkXXIII_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_40mm_l60_bofors_mk1_twin_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_40mm_l60_bofors_mk1_twin_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_40mm_l60_bofors_mk3_single_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_40mm_l60_bofors_mk3_single_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_102mm_45_BL_Mk_IX_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_102mm_45_BL_Mk_IX_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_40mm_QF_2pdr_mk_VIII_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_40mm_QF_2pdr_mk_VIII_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_76mm_3_40_12cwt_qf_mk5_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_76mm_3_40_12cwt_qf_mk5_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_37mm_AN_M4_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_37mm_AN_M4_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_40mm_l60_bofors_mk2_quad_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_40mm_l60_bofors_mk2_quad_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_130mm_55_obr1913_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_130mm_55_obr1913_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_76mm_39K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_76mm_39K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_150mm_60_skc_25_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_150mm_60_skc_25_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_88mm_76_skc_32_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_88mm_76_skc_32_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_20mm_MGC30_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_20mm_MGC30_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_133mm_5_25inch_50_qf_mk1_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_133mm_5_25inch_50_qf_mk1_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_28mm_75_mk_1_chicago_piano_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_28mm_75_mk_1_chicago_piano_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_152mm_6inch_47_mk_16_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_152mm_6inch_47_mk_16_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_127mm_5inch_25_Mark_13_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_127mm_5inch_25_Mark_13_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_152mm_6inch_50_bl_mk_xxiii_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_152mm_6inch_50_bl_mk_xxiii_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_180mm_b1p_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_180mm_b1p_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_100mm_56_b34_1940_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_100mm_56_b34_1940_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirCaliberReloadTime_45mm_21K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAntiAirMaxAngle_45mm_21K_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberReloadTime_152mm_6inch_50_qf_mk_5_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipMainCaliberMaxAngle_152mm_6inch_50_qf_mk_5_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxCaliberReloadTime_76mm_70_mark_6_naval_user_cannon { get; protected set; }

        [Property()] public virtual decimal? ShipAuxMaxAngle_76mm_70_mark_6_naval_user_cannon { get; protected set; }

        #endregion Weapons

        #endregion Persistent Properties
        #region Constructors

        /// <summary> This constructor is used by NHibernate to instantiate deserialized data read from a database. </summary>
        protected Vehicle()
        {
        }

        /// <summary> Creates a new nation. </summary>
        /// <param name="dataRepository"> A data repository to persist the object with. </param>
        /// <param name="gaijinId"> The nation's Gaijin ID. </param>
        public Vehicle(IDataRepository dataRepository, string gaijinId)
            : this(dataRepository, -1L, gaijinId)
        {
        }

        /// <summary> Creates a new nation. </summary>
        /// <param name="dataRepository"> A data repository to persist the object with. </param>
        /// <param name="instanceDerializedFromJson"> A non-persistent instance deserialized from JSON data to initialize this instance with. </param>
        public Vehicle(IDataRepository dataRepository, VehicleDeserializedFromJson instanceDerializedFromJson)
            : this(dataRepository, -1L, instanceDerializedFromJson.GaijinId)
        {
            InitializeWithDeserializedJson(instanceDerializedFromJson);
        }

        /// <summary> Creates a new nation. </summary>
        /// <param name="dataRepository"> A data repository to persist the object with. </param>
        /// <param name="id"> The nation's ID. </param>
        /// <param name="gaijinId"> The nation's Gaijin ID. </param>
        public Vehicle(IDataRepository dataRepository, long id, string gaijinId)
            : base(dataRepository, id, gaijinId)
        {
            LogCreation();
        }

        // This class is not supposed to have a constructor that allows injection of most property values.
        // That is done when deserializing instances from JSON.

        #endregion Constructors

        /// <summary> Initializes non-persistent fields of the instance. Use this method to finalize reading from a database. </summary>
        /// <param name="dataRepository"> A data repository to assign the object to. </param>
        public override void InitializeNonPersistentFields(IDataRepository dataRepository)
        {
            base.InitializeNonPersistentFields(dataRepository);

            InitializeVisualBattleRatings();
        }

        /// <summary> Tries to insert the value of the specified jSON property into the relevant game mode parameter set. </summary>
        /// <param name="instanceDeserializedFromJson"> The temporary non-persistent object storing deserialized data. </param>
        /// <param name="jsonProperty"> The JSON property whose value is being inserted. </param>
        /// <param name="parameterSets"> The dictionary of available game mode parameter sets. </param>
        protected virtual void InsertJsonPropertyValueIntoGameModeParameterSet(IDeserializedFromJson instanceDeserializedFromJson, PropertyInfo jsonProperty, Dictionary<string, VehicleGameModeParameterSetBase> parameterSets)
        {
            var persistAsDictionaryItemAttribute = jsonProperty.GetCustomAttribute<PersistAsDictionaryItemAttribute>();

            if (persistAsDictionaryItemAttribute is null) // We are not interested in any properties not marked for consolidation via PersistAsDictionaryItemAttribute.
                return;

            var jsonPropertyValue = jsonProperty.GetValue(instanceDeserializedFromJson);

            #region Adjust value inputs for nullability of dictionary values (in case of non-required JSON properties)

            if (jsonProperty.PropertyType == typeof(int))
                jsonPropertyValue = new int?((int)jsonPropertyValue);

            else if (jsonProperty.PropertyType == typeof(decimal))
                jsonPropertyValue = new decimal?((decimal)jsonPropertyValue);

            #endregion Adjust value inputs for nullability of dictionary values (in case of non-required JSON properties

            var parameterSet = parameterSets[persistAsDictionaryItemAttribute.Key];

            switch (persistAsDictionaryItemAttribute.GameMode)
            {
                case EGameMode.Arcade:
                    parameterSet.InternalArcade = jsonPropertyValue;
                    break;
                case EGameMode.Realistic:
                    parameterSet.InternalRealistic = jsonPropertyValue;
                    break;
                case EGameMode.Simulator:
                    parameterSet.InternalSimulator = jsonPropertyValue;
                    break;
                case EGameMode.Event:
                    parameterSet.InternalEvent = jsonPropertyValue;
                    break;
            };
        }

        /// <summary> Consolidates values of JSON properties for <see cref="EGameMode"/> parameters into sets defined in the persistent class. </summary>
        /// <param name="instanceDeserializedFromJson"> The temporary non-persistent object storing deserialized data. </param>
        protected virtual void ConsolidateGameModeParameterPropertiesIntoSets(IDeserializedFromJson instanceDeserializedFromJson)
        {
            var parameterSets = new Dictionary<string, VehicleGameModeParameterSetBase>
            {
                { nameof(AverageAward), AverageAward },
                { nameof(BattleTime), BattleTime },
                { nameof(BattleTimeAward), BattleTimeAward },
                { nameof(EconomicRank), EconomicRank },
                { nameof(NumberOfSpawns), NumberOfSpawns },
                { nameof(RepairCost), RepairCost },
                { nameof(RepairTimeWithCrew), RepairTimeWithCrew },
                { nameof(RepairTimeWithoutCrew), RepairTimeWithoutCrew },
                { nameof(RewardMultiplier), RewardMultiplier },
                { nameof(VisualPremiumRewardMultiplier), VisualPremiumRewardMultiplier },
                { nameof(VisualRewardMultiplier), VisualRewardMultiplier },
            };

            foreach (var jsonProperty in instanceDeserializedFromJson.GetType().GetProperties()) // With a dictionary of game mode parameter set properties now there's only need to look through the JSON mapping class once.
                InsertJsonPropertyValueIntoGameModeParameterSet(instanceDeserializedFromJson, jsonProperty, parameterSets);
        }

        /// <summary> Fills properties of the object with values deserialized from JSON data. </summary>
        /// <param name="instanceDeserializedFromJson"> The temporary non-persistent object storing deserialized data. </param>
        protected override void InitializeWithDeserializedJson(IDeserializedFromJson instanceDeserializedFromJson)
        {
            base.InitializeWithDeserializedJson(instanceDeserializedFromJson);

            #region Instantialize all game mode parameter set properties.

            AverageAward = new VehicleGameModeParameterSet.Integer.AverageAward(_dataRepository, this);
            BattleTime = new VehicleGameModeParameterSet.Decimal.BattleTime(_dataRepository, this);
            BattleTimeAward = new VehicleGameModeParameterSet.Integer.BattleTimeAward(_dataRepository, this);
            EconomicRank = new VehicleGameModeParameterSet.Integer.EconomicRank(_dataRepository, this);
            NumberOfSpawns = new VehicleGameModeParameterSet.Integer.NumberOfSpawns(_dataRepository, this);
            RepairCost = new VehicleGameModeParameterSet.Integer.RepairCost(_dataRepository, this);
            RepairTimeWithCrew = new VehicleGameModeParameterSet.Decimal.RepairTimeWithCrew(_dataRepository, this);
            RepairTimeWithoutCrew = new VehicleGameModeParameterSet.Decimal.RepairTimeWithoutCrew(_dataRepository, this);
            RewardMultiplier = new VehicleGameModeParameterSet.Decimal.RewardMultiplier(_dataRepository, this);
            VisualPremiumRewardMultiplier = new VehicleGameModeParameterSet.Decimal.VisualPremiumRewardMultiplier(_dataRepository, this);
            VisualRewardMultiplier = new VehicleGameModeParameterSet.Decimal.VisualRewardMultiplier(_dataRepository, this);

            #endregion All game mode parameter set properties have been instantialized.

            ConsolidateGameModeParameterPropertiesIntoSets(instanceDeserializedFromJson);

            #region Battle ratings have to be initialized explicitly because they are absent in JSON data.

            decimal? getBattleRating(int? economicRank) => economicRank.HasValue ? Calculator.GetBattleRating(economicRank.Value) : default(decimal?);

            BattleRating = new VehicleGameModeParameterSet.Decimal.BattleRating(_dataRepository, this, getBattleRating(EconomicRank.Arcade), getBattleRating(EconomicRank.Realistic), getBattleRating(EconomicRank.Simulator), null);

            InitializeVisualBattleRatings();

            #endregion Battle ratings have been initialized.

            if (instanceDeserializedFromJson is VehicleDeserializedFromJson deserializedVehicle)
            {
                PatchSpawnType(deserializedVehicle);
                BackupSortieCostInGold = deserializedVehicle.BackupSortie.PurchaseCostInGold;
            }
        }

        /// <summary> Initializes formatted string representations of <see cref="BattleRating"/>. </summary>
        private void InitializeVisualBattleRatings()
        {
            string formatBattleRating(decimal? nullableValue) => nullableValue.HasValue ? nullableValue.Value.ToString(_battleRatingFormat) : _unknownBattleRating;

            if (BattleRating is null)
                return;

            BattleRatingFormatted = new VehicleGameModeParameterSet.String.BattleRating(formatBattleRating(BattleRating.Arcade), formatBattleRating(BattleRating.Realistic), formatBattleRating(BattleRating.Simulator), _unknownBattleRating);
        }

        protected virtual void PatchSpawnType(VehicleDeserializedFromJson deserializedVehicle)
        {
            if (deserializedVehicle.SpawnType == "ah")
                SpawnType = "walker (ah)";
            else if (deserializedVehicle.SpawnType == null)
                SpawnType = "default";
        }
    }
}