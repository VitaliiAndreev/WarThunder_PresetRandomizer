using Core.DataBase.Objects.Interfaces;
using System.Collections.Generic;

namespace Core.DataBase.WarThunder.Objects.Interfaces
{
    /// <summary> A vehicle (air, ground, or sea). </summary>
    public interface IVehicle : IPersistentObjectWithIdAndGaijinId
    {
        #region Persistent Properties

        #region Crew

        /// <summary> The crew train cost in Silver Lions that has to be paid before a vehicle can be put into a crew slot (except for reserve vehicles). </summary>
        int BaseCrewTrainCostInSilver { get; }

        /// <summary> The expert crew train cost in Silver Lions. </summary>
        int ExpertCrewTrainCostInSilver { get; }

        /// <summary> The base cost of ace crew training in Golden Eagles. </summary>
        int AceCrewTrainCostInGold { get; }

        /// <summary> The amount of research generated by the vehicle to unlock ace crew qualification for free. </summary>
        int AceCrewTrainCostInResearch { get; }

        /// <summary> The total number of crewmen in the vehicle. </summary>
        int CrewCount { get; }

        /// <summary>
        /// The minimum number of crewmen in the vehicle for it to be operable.
        /// This property is only assigned to naval vessels. Aircraft by default need at least one pilot to stay in the air, while ground vehicles require two.
        /// </summary>
        int? MinumumCrewCountToOperate { get; }

        /// <summary> The number of gunners in the vehicle. </summary>
        int GunnersCount { get; }

        #endregion Crew
        #region General

        /// <summary> The vehicle's nation. </summary>
        string Nation { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        string MoveType { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        string Class { get; }

        /// <summary> Whether this vehicle is hidden. </summary>
        bool? ShowOnlyWhenBought { get; }

        /// <summary> The category of hidden vehicles this one belongs to. </summary>
        string CategoryOfHiddenVehicles { get; }

        /// <summary> The gift requirement that grants ownerhip of this vehicle. </summary>
        string OwnershipGiftPrerequisite { get; }

        /// <summary> Whether this vehicle is gifted to new players upon selecting their first vehicle branch and completing the tutorial. </summary>
        bool? GiftedToNewPlayersForSelectingTheirFirstBranch { get; }

        /// <summary> The purchase requirement that grants ownerhip of this vehicle. </summary>
        string OwnershipPurchasePrerequisite { get; }

        /// <summary>
        /// The custom research category that this vehicle is unlocked with.
        /// NULL means that standard research is used.
        /// <para>
        /// This property had been introduced with special squadron vehicles that are researched with squadron activity instead of the normal research,
        /// or are purchased with Golden Eagles, with discount (see <see cref="DiscountedPurchaseCostInGold"/>) if some research progress is made.
        /// </para>
        /// </summary>
        string ResearchUnlockType { get; }

        /// <summary> The amount of research required to unlock the vehicle. </summary>
        int? UnlockCostInResearch { get; }

        /// <summary>
        /// The price of purchasing the vehicle with Silver Lions.
        /// Zero means that the vehicle cannot be bought for Silver Lions.
        /// </summary>
        int PurchaseCostInSilver { get; }

        /// <summary> The price of purchasing the vehicle with Golden Eagles. </summary>
        int? PurchaseCostInGold { get; }

        /// <summary> The price of purchasing a squadron-researchable vehicle (see <see cref="ResearchUnlockType"/>) after some progress towards its unlocking is made. </summary>
        int? DiscountedPurchaseCostInGold { get; }

        /// <summary> The vehicle that has to be researched / unlocked before this one can be purchased. </summary>
        string VehicleRequired { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        string SpawnType { get; }

        /// <summary>
        /// The number of times this vehicle can sortie per match in Event Battles.
        /// This property is used only by walking tanks introduced in 1st April 2015 and later used in Operation S.U.M.M.E.R.
        /// </summary>
        int? NumberOfSpawnsInEvents { get; }

        /// <summary>
        /// The number of times this vehicle can sortie per match in Arcade Battles.
        /// This property is necessary for branches that don't have more than one reserve / starter vehicle, like helicopters and navy.
        /// </summary>
        int? NumberOfSpawnsInArcade { get; }

        /// <summary>
        /// The number of times this vehicle can sortie per match in Realistic Battles.
        /// This property is necessary for branches that don't have more than one reserve / starter vehicle, like helicopters and navy.
        /// </summary>
        int? NumberOfSpawnsInRealistic { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY, NULL VALUES SEEM TO MEAN 1 YET THERE ARE EXPLICIT ONES FOR NAVY, HELICOPTERS, AND SOME HEAVY TANKS] </summary>
        int? NumberOfSpawnsInSimulation { get; }

        /// <summary> Whether this vehicle can spawn as a kill streak aircraft in Arcade Battles. </summary>
        bool? CanSpawnAsKillStreak { get; }

        #endregion General
        #region Graphics

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        string CustomClassIco { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        string CustomImage { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        string CustomTooltipImage { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        string CommonWeaponImage { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        int? WeaponMask { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        int? BulletsIconParam { get; }

        #endregion Graphics
        #region Modifications

        /// <summary> The modification that is considered an upgrade of the vehicle's armaments. </summary>
        string WeaponUpgrade1 { get; }

        /// <summary> The modification that is considered an upgrade of the vehicle's armaments. </summary>
        string WeaponUpgrade2 { get; }

        /// <summary> The modification that is considered an upgrade of the vehicle's armaments. </summary>
        string WeaponUpgrade3 { get; }

        /// <summary> The modification that is considered an upgrade of the vehicle's armaments. </summary>
        string WeaponUpgrade4 { get; }

        /// <summary>
        /// [NOT VISUALLY USED IN GAME CLIENT]
        /// The amount of researched modifications of the zeroth tier required to unlock modifications of the first tier.
        /// </summary>
        int AmountOfModificationsResearchedIn_Tier0_RequiredToUnlock_Tier1 { get; }

        /// <summary> The amount of researched modifications of the first tier required to unlock modifications of the second tier. </summary>
        int AmountOfModificationsResearchedIn_Tier1_RequiredToUnlock_Tier2 { get; }

        /// <summary> The amount of researched modifications of the second tier required to unlock modifications of the third tier. </summary>
        int AmountOfModificationsResearchedIn_Tier2_RequiredToUnlock_Tier3 { get; }

        /// <summary> The amount of researched modifications of the third tier required to unlock modifications of the fourth tier. </summary>
        int AmountOfModificationsResearchedIn_Tier3_RequiredToUnlock_Tier4 { get; }

        #endregion Modifications
        #region Performance

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? Speed { get; }

        /// <summary> Maximum flight time (in munutes). Applies only to planes and indicates for how long one can fly with a full tank of fuel. </summary>
        int? MaximumFlightTime { get; }

        /// <summary> The vehicle's turret traverse speeds. </summary>
        List<decimal> TurretTraverseSpeeds { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? MachineGunReloadTime { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? CannonReloadTime { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? GunnerReloadTime { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY, VEHICLES WITHOUT PRIMARY ARMAMENT DON"T HAVE THIS PROPERTY] </summary>
        int? MaximumAmmunition { get; }

        /// <summary> Whether the vehicle's main armament comes equipped with an auto-loader (grants fixed reload speed that doesn't depend on the loader and doesn't improve with the loader's skill). </summary>
        bool? PrimaryWeaponHasAutoLoader { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? MaximumRocketDeltaAngle { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? MaximumAtgmDeltaAngle { get; }

        /// <summary> The baseline time of fire extinguishing for inexperienced naval crewmen. </summary>
        decimal? MaximumFireExtinguishingTime { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? HullBreachRepairSpeed { get; }

        #endregion Performance
        #region Rank

        /// <summary> The vehicle's research rank. </summary>
        int Rank { get; }

        /// <summary> [OBSOLETE, NOW AN INTERNAL VALUE] The vehicle's rank (the predecessor of the <see cref="BattleRatingInArcade"/>) in Arcade Battles. The battle rating is being calculated from it. </summary>
        int EconomicRankInArcade { get; }

        /// <summary> [OBSOLETE, NOW AN INTERNAL VALUE] The vehicle's rank (the predecessor of the <see cref="BattleRatingInRealistic"/>) in Realistic Battles. The battle rating is being calculated from it. </summary>
        int EconomicRankInRealistic { get; }

        /// <summary> [OBSOLETE, NOW AN INTERNAL VALUE] The vehicle's rank (the predecessor of the <see cref="BattleRatingInSimulation"/>) in Simulator Battles. The battle rating is being calculated from it. </summary>
        int? EconomicRankInSimulation { get; }

        /// <summary> The value used for matchmaking (falling into a ± 1.0 battle rating bracket) in Arcade Battles. </summary>
        string BattleRatingInArcade { get; }

        /// <summary> The value used for matchmaking (falling into a ± 1.0 battle rating bracket) in Realistic Battles. </summary>
        string BattleRatingInRealistic { get; }

        /// <summary> The value used for matchmaking (falling into a ± 1.0 battle rating bracket) in Simulator Battles. </summary>
        string BattleRatingInSimulation { get; }

        #endregion Rank
        #region Repairs

        /// <summary>
        /// The full time needed for the vehicle to be repaired for free while being in the currently selected preset in Arcade Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        decimal RepairTimeWithCrewInArcade { get; }

        /// <summary>
        /// The full time needed for the vehicle to be repaired for free while being in the currently selected preset in Realistic Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        decimal RepairTimeWithCrewInRealistic { get; }

        /// <summary>
        /// The full time needed for the vehicle to be repaired for free while being in the currently selected preset in Simulator Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        decimal RepairTimeWithCrewInSimulation { get; }

        /// <summary>
        /// The full time needed for the vehicle to be repaired for free while not being in the currently selected preset in Arcade Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        decimal RepairTimeWithoutCrewInArcade { get; }

        /// <summary>
        /// The full time needed for the vehicle to be repaired for free while not being in the currently selected preset in Realistic Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        decimal RepairTimeWithoutCrewInRealistic { get; }

        /// <summary>
        /// The full time needed for the vehicle to be repaired for free while not being in the currently selected preset in Simulator Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        decimal RepairTimeWithoutCrewInSimulation { get; }

        /// <summary>
        /// The full Silver Lion cost for repairing or auto-repairing the vehicle in Arcade Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        int RepairCostInArcade { get; }

        /// <summary>
        /// The full Silver Lion cost for repairing or auto-repairing the vehicle in Realistic Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        int RepairCostInRealistic { get; }

        /// <summary>
        /// The full Silver Lion cost for repairing or auto-repairing the vehicle in Simulator Battles.
        /// Reserve vehicles don't need repairs.
        /// </summary>
        int RepairCostInSimulation { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY, ALL PREMIUM (NON-GIFT) VEHICLES HAVE IT] </summary>
        int? FreeRepairs { get; }

        #endregion Repairs
        #region Rewards

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        int BattleTimeAwardInArcade { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        int BattleTimeAwardInRealistic { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        int BattleTimeAwardInSimulation { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        int AverageAwardInArcade { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        int AverageAwardInRealistic { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        int AverageAwardInSimulation { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal RewardMultiplierInArcade { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal RewardMultiplierInRealistic { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal RewardMultiplierInSimulation { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal VisualRewardMultiplierInArcade { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal VisualRewardMultiplierInRealistic { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal VisualRewardMultiplierInSimulation { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? VisualPremiumRewardMultiplierInArcade { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? VisualPremiumRewardMultiplierInRealistic { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal? VisualPremiumRewardMultiplierInSimulation { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal ResearchRewardMultiplier { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal GroundKillRewardMultiplier { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal BattleTimeArcade { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal BattleTimeRealistic { get; }

        /// <summary> [THERE IS NO FULL UNDERSTANDING OF THIS PROPERTY] </summary>
        decimal BattleTimeSimulation { get; }

        #endregion Rewards

        #endregion Persistent Properties
    }
}
